const express = require("express");
const path = require("path");
const multer = require("multer");
const pool = require("../db/db");
const { verifyToken } = require("../middleware/authenticateUser");
const BookingController = require("../controllers/bookingController");

const router = express.Router();

// üìÅ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ multer
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, path.join(__dirname, "..", "uploads")),
  filename: (req, file, cb) => cb(null, "slip_" + Date.now() + path.extname(file.originalname)),
});
const upload = multer({ storage });

// ‚úÖ Upload Slip
// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô)
router.post("/:id/slip", verifyToken, upload.single("slip"), BookingController.uploadSlip);


// ‚úÖ routes ‡∏õ‡∏Å‡∏ï‡∏¥
router.get("/mine", verifyToken, BookingController.getMine);
router.get("/", verifyToken, BookingController.getAll);
router.get("/:id", verifyToken, BookingController.getById);
router.post("/", verifyToken, BookingController.create);
router.put("/:id", verifyToken, BookingController.update);
router.delete("/:id", verifyToken, BookingController.delete);
router.put("/:id/cost", verifyToken, BookingController.updateCost);

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° route ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
router.put("/:id/status", verifyToken, BookingController.updateStatus);

module.exports = router;
  