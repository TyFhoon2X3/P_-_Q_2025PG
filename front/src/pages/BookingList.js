import { useEffect, useState } from "react";
import { api } from "../api";
import { Link, useNavigate } from "react-router-dom";
import Swal from "sweetalert2";
import "../styles/TableForBook.css";

export default function MyBookings() {
  const [bookings, setBookings] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const getStatus = (status_id) => {
    switch (status_id) {
      case 1:
        return { label: "‚è≥ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£", className: "status-pending" };
      case 2:
        return { label: "üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡πà‡∏≠‡∏°", className: "status-progress" };
      case 3:
        return { label: "‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", className: "status-done" };
      case 4:
        return { label: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", className: "status-cancel" };
      default:
        return { label: "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", className: "status-unknown" };
    }
  };

  // ‡πÇ‡∏´‡∏•‡∏î booking
  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      Swal.fire({
        title: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö",
        icon: "warning",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
      });
      navigate("/login");
      return;
    }
    fetchBookings();
  }, [navigate]);

  const fetchBookings = async () => {
    try {
      const data = await api("/api/bookings/mine");
      if (!data || data.success === false) {
        setError(data?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ");
        setBookings([]);
      } else {
        setBookings(data.bookings || []);
      }
    } catch (err) {
      console.error("Error loading bookings:", err);
      setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
    } finally {
      setIsLoading(false);
    }
  };

  // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å booking
  const cancelBooking = async (id) => {
    const result = await Swal.fire({
      title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å?",
      text: "‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "‡πÉ‡∏ä‡πà, ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏¢",
      cancelButtonText: "‡πÑ‡∏°‡πà",
    });

    if (!result.isConfirmed) return;

    try {
      await api(`/api/bookings/${id}`, {
        method: "PUT",
        body: { status_id: 4 },
      });

      Swal.fire({
        title: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ",
        text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
        icon: "success",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
      });

      fetchBookings();
    } catch (err) {
      Swal.fire({
        title: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        text: err.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        icon: "error",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
      });
    }
  };

  if (isLoading) {
    return (
      <div className="loading" role="status">
        ‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...
      </div>
    );
  }

  return (
    <div className="page-container">
      <h1 className="page-title" role="heading" aria-level="1">
        üìã ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
      </h1>

      {error && (
        <p className="error" role="alert">
          {error}
        </p>
      )}

      {bookings.length === 0 ? (
        <p className="no-data">‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</p>
      ) : (
        <div className="table-container">
          <table className="table big-table" aria-label="‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô">
            <thead>
              <tr>
                <th scope="col">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                <th scope="col">‡πÄ‡∏ß‡∏•‡∏≤</th>
                <th scope="col">‡∏£‡∏ñ</th>
                <th scope="col">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                <th scope="col">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th scope="col">‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°</th>
                <th scope="col">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody>
              {bookings.map((booking) => {
                const status = getStatus(booking.status_id);
                return (
                  <tr key={booking.booking_id}>
                    <td>
                      {new Date(booking.date).toLocaleDateString("th-TH")}
                    </td>
                    <td>{booking.time}</td>
                    <td>
                      <span className="badge-car">
                        {booking.license_plate} ({booking.model})
                      </span>
                    </td>
                    <td>{booking.description || "-"}</td>
                    <td>
                      <span
                        className={`status-badge ${status.className}`}
                        aria-label={`‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${status.label}`}
                      >
                        {status.label}
                      </span>
                    </td>
                    <td>
                      <span className="price">
                        {Number(booking.total_price || 0).toLocaleString()} ‡∏ø
                      </span>
                    </td>
                    <td className="action-buttons">
                      <Link
                        to={`/bookings/${booking.booking_id}`}
                        className="btn btn-detail"
                        aria-label="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
                      >
                        üîç ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                      </Link>
                      {booking.status_id === 1 && (
                        <button
                          onClick={() => cancelBooking(booking.booking_id)}
                          className="btn btn-cancel"
                          aria-label="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
                        >
                          ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                        </button>
                      )}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
}
