// src/pages/MyVehicles.jsx
import { useEffect, useState } from "react";
import { api } from "../api";
import Swal from "sweetalert2";

export default function MyVehicles() {
  const [vehicles, setVehicles] = useState([]);
  const [brands, setBrands] = useState([]);
  const [types, setTypes] = useState([]);
  const [loading, setLoading] = useState(true);
  const [editing, setEditing] = useState(false);

  const [form, setForm] = useState({
    vehicle_id: "",
    license_plate: "",
    model: "",
    id_brand: "",
    id_type: "",
  });

  // ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏ñ, ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠, ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  const fetchData = async () => {
    try {
      const [v, b, t] = await Promise.all([
        api("/api/vehicles/mine"),
        api("/api/brands"),
        api("/api/typecar"),
      ]);
      setVehicles(v.vehicles || []);
      setBrands(b.brands || []);
      setTypes(t.typecar || []);
    } catch (err) {
      Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‚ùå", "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "error");
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô form
  const onChange = (e) => {
    const { name, value } = e.target;
    setForm((prev) => ({ ...prev, [name]: value }));
  };

  // ‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const submit = async (e) => {
    e.preventDefault();
    try {
      if (editing) {
        await api(`/api/vehicles/${form.vehicle_id}`, {
          method: "PUT",
          body: form,
        });
        Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ", "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", "success");
      } else {
        await api("/api/vehicles", { method: "POST", body: form });
        Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ", "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", "success");
      }
      setForm({ vehicle_id: "", license_plate: "", model: "", id_brand: "", id_type: "" });
      setEditing(false);
      fetchData();
    } catch (err) {
      Swal.fire("‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ùå", "‡∏°‡∏µ‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß", "error");
    }
  };

  // ‡∏Å‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const onEdit = (v) => {
    setForm({
      vehicle_id: v.vehicle_id,
      license_plate: v.license_plate,
      model: v.model,
      id_brand: v.id_brand, // ‚úÖ ‡πÉ‡∏´‡πâ dropdown ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å
      id_type: v.id_type,   // ‚úÖ ‡πÉ‡∏´‡πâ dropdown ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å
    });
    setEditing(true);
  };

  // ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
  const onCancel = () => {
    setForm({ vehicle_id: "", license_plate: "", model: "", id_brand: "", id_type: "" });
    setEditing(false);
  };

  // ‡∏Å‡∏î‡∏•‡∏ö
  const onDelete = async (id) => {
    const confirm = await Swal.fire({
      title: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
      text: "‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "‡∏•‡∏ö‡πÄ‡∏•‡∏¢",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
    });

    if (!confirm.isConfirmed) return;

    try {
      await api(`/api/vehicles/${id}`, { method: "DELETE" });
      Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ", "‡∏•‡∏ö‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", "success");
      fetchData();
    } catch (err) {
      Swal.fire("‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ùå", err.message, "error");
    }
  };

  if (loading) return <div>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;

  return (
    <div className="page-container" style={{ maxWidth: "900px", margin: "24px auto", padding: "0 16px" }}>
      <h1 className="page-title">üöô ‡∏£‡∏ñ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h1>

      {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç */}
      <div className="card" style={{ padding: "16px", marginBottom: "20px" }}>
        <h3>{editing ? "‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏ñ" : "‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ"}</h3>
        <form onSubmit={submit}>
          <div className="label">‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</div>
          <input
            type="text"
            name="license_plate"
            value={form.license_plate}
            onChange={onChange}
            className="input"
            required
          />

          <div className="label">‡∏£‡∏∏‡πà‡∏ô</div>
          <input
            type="text"
            name="model"
            value={form.model}
            onChange={onChange}
            className="input"
            required
          />

          <div className="label">‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠</div>
          <select
            name="id_brand"
            value={form.id_brand}
            onChange={onChange}
            className="input"
            required
          >
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠ --</option>
            {brands.map((b) => (
              <option key={b.id_brand} value={b.id_brand}>
                {b.brandname}
              </option>
            ))}
          </select>

          <div className="label">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ</div>
          <select
            name="id_type"
            value={form.id_type}
            onChange={onChange}
            className="input"
            required
          >
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó --</option>
            {types.map((t) => (
              <option key={t.id_type} value={t.id_type}>
                {t.typename}
              </option>
            ))}
          </select>

          <div style={{ marginTop: "12px" }}>
            <button type="submit" className="btn-primary">
              {editing ? "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ"}
            </button>
            {editing && (
              <button type="button" onClick={onCancel} style={{ marginLeft: "8px" }}>
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
            )}
          </div>
        </form>
      </div>

      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏ñ */}
      <div className="card" style={{ padding: "16px" }}>
        {vehicles.length === 0 ? (
          <p style={{ color: "gray" }}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ</p>
        ) : (
          <table className="table" style={{ width: "100%", borderCollapse: "collapse" }}>
            <thead>
              <tr>
                <th>‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠</th>
                <th>‡∏£‡∏∏‡πà‡∏ô</th>
                <th>‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</th>
                <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ</th>
                <th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody>
              {vehicles.map((v) => (
                <tr key={v.vehicle_id}>
                  <td>{v.brandname}</td>
                  <td>{v.model}</td>
                  <td>{v.license_plate}</td>
                  <td>{v.typename}</td>
                  <td>
                    <button onClick={() => onEdit(v)} style={{ marginRight: "8px" }}>
                      ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                    </button>
                    <button onClick={() => onDelete(v.vehicle_id)} style={{ color: "red" }}>
                      ‡∏•‡∏ö
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>
    </div>
  );
}
