import "../styles/navbar.css";
import "../styles/common.css";
import { Link, NavLink, useNavigate, useLocation } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import Swal from "sweetalert2";
import { Bell } from "lucide-react"; // üîî ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô

export default function Navbar() {
  const nav = useNavigate();
  const location = useLocation(); // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
  const [role, setRole] = useState(null);
  const [lowStock, setLowStock] = useState([]);
  const [dropdownOpen, setDropdownOpen] = useState(false);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î role ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
  useEffect(() => {
    const updateRole = () => {
      const storedRole = localStorage.getItem("role");
      setRole(storedRole);
    };
    updateRole();
  }, [location]); // üëà ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà route ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin)
  useEffect(() => {
    if (role === "r1") {
      fetchLowStock();
      const interval = setInterval(fetchLowStock, 60000); // ‡∏ó‡∏∏‡∏Å 1 ‡∏ô‡∏≤‡∏ó‡∏µ
      return () => clearInterval(interval);
    }
  }, [role]);

  const fetchLowStock = async () => {
    const token = localStorage.getItem("token");
    try {
      const res = await axios.get("http://localhost:3000/api/parts", {
        headers: { Authorization: `Bearer ${token}` },
      });
      if (res.data.success) {
        const low = res.data.parts.filter((p) => Number(p.quantity) <= 5);
        setLowStock(low);
      }
    } catch (err) {
      console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  };

  const logout = () => {
    localStorage.removeItem("token");
    localStorage.removeItem("role");
    setRole(null);
    nav("/login");
  };

  const renderLinks = () => {
    if (role === "r1") {
      return (
        <>
          <NavLink to="/admin-dashboard">‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</NavLink>
          <NavLink to="/admin/customers">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</NavLink>
          <NavLink to="/admin/vehicles">‡∏£‡∏ñ‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</NavLink>
          <NavLink to="/admin/bookings">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</NavLink>
          <NavLink to="/admin/parts">‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà</NavLink>
        </>
      );
    }
    if (role === "r2") {
      return (
        <>
          <NavLink to="/user-dashboard">‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î</NavLink>
          <NavLink to="/my-vehicles">‡∏£‡∏ñ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</NavLink>
          <NavLink to="/book-service">‡∏à‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</NavLink>
          <NavLink to="/bookings">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</NavLink>
        </>
      );
    }
    return null;
  };

  const handlePartClick = (part) => {
    Swal.fire({
      title: part.name,
      icon: "info",
      html: `
        <p><b>‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå:</b> ${part.marque}</p>
        <p><b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</b> ${part.quantity}</p>
        <p><b>‡∏£‡∏≤‡∏Ñ‡∏≤:</b> ${part.unit_price} ‡∏ø</p>
      `,
      confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
    });
  };

  return (
    <nav className="nav">
      <div className="nav-inner">
        <div className="brand">üöó P & Q Garage</div>

        <div className="nav-links">
          <NavLink to="/">‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</NavLink>
          <NavLink to="/about-us">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</NavLink>
          <NavLink to="/contact">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</NavLink>
          {renderLinks()}
        </div>

        <div className="nav-actions">
          {/* üîî ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin */}
          {role === "r1" && (
            <div className="relative notification-container">
              <button
                onClick={() => setDropdownOpen(!dropdownOpen)}
                className="notification-btn"
              >
                <Bell size={22} />
                {lowStock.length > 0 && (
                  <span className="badge">{lowStock.length}</span>
                )}
              </button>

              {dropdownOpen && (
                <div className="notification-dropdown">
                  <div className="dropdown-header">‚ö†Ô∏è ‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î</div>
                  {lowStock.length === 0 ? (
                    <div className="dropdown-empty">
                      ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î
                    </div>
                  ) : (
                    <ul>
                      {lowStock.map((p) => (
                        <li
                          key={p.part_id}
                          onClick={() => handlePartClick(p)}
                          className="dropdown-item"
                        >
                          <span>{p.name}</span>
                          <span className="qty">{p.quantity} ‡∏ä‡∏¥‡πâ‡∏ô</span>
                        </li>
                      ))}
                    </ul>
                  )}
                  <div className="dropdown-footer">
                    <Link
                      to="/admin/parts"
                      onClick={() => setDropdownOpen(false)}
                    >
                      ‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‚Üí
                    </Link>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* üîò ‡∏õ‡∏∏‡πà‡∏° Login/Logout */}
          {role ? (
            <button className="btn-outline" onClick={logout}>
              ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
            </button>
          ) : (
            <>
              <Link className="btn-outline" to="/login">
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
              </Link>
              <Link className="btn-outline" to="/register">
                ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
              </Link>
            </>
          )}
        </div>
      </div>
    </nav>
  );
}
